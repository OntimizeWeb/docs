
directive : "o-tree"

attributes: [{
  name: "attr"
},{
  name: "title",
  type: "string",
  default : "",

  description : "Title in exported files"
},{
  name: "static-data"
},{
  name: "service"
},{
  name: "service-type"
},{
  name: "query-method"
},{
  name: "entity"
},{
  name: "keys"
},{
  name: "parent-keys",
  type: "string",
  default: "",
  required: "",
  description: "Form field attributes used for filtering the table data. Separated by ';'. It is possible to use alias on the following way: tableCol1:fk1;tableCol2:fk2 where tableCol1 and tableCol2 are table columns and fk1 and fk2 are attributes from form fields."
},{
  name: "columns"
},{
  name: "sort-columns",
  type: "string",
  default : "",

  description : "Initial ordering, using [ ASC or DESC ] format. Separated by ';'"
},{
  name: "query-on-init",
  default : "yes",
},{
  name: "query-on-bind",
  default : "yes",
},{
  name: "quick-filter"
},{
  name: "refresh-button"
},{
  name: "query-rows"
},{
  name: "insert-method"
},{
  name: "update-method"
},{
  name: "paginated-query-method"
},{
  name: "deleted-method"
},{
  name: "pageable",
  default : "no"
},{
  name: "store-state"
},{
  name: "description-columns",
  default : "<em>columns</em> attribute value",
  description : "Tree node visible text columns"
},{
  name: "separator"
},{
  name: "parent-column",
  type: "string",
  default : "",

  description : ""
},{
  name: "show-root",
  type: "no | false | yes | true",
  default : "",

  description : ""
},{
  name: "root-title",
  type: "string",
  default : "",
  description : ""
},{
  name: "recursive",
  type: "no | false | yes | true",
  default : "no",
  description : ""
},{
  name: "recursive-levels",
  type: "number",
  default : "1",
  description : ""
},{
  name: "translate",
  type: "no | false | yes | true",
  default : "no",
  description : "Indicates whether or not to automatically translate the tree nodes values"
}]
# ,{
#   name: "route",
#   type: "string",
#   default : "",
#   description : ""
# }


outputs: [{
  name : "onNodeSelected",
  description: "Event triggered when a tree node is selected"
},{
  name : "onNodeExpanded",
  description: "Event triggered when a tree node is expanded"
},{
  name : "onNodeCollapsed",
  description: "Event triggered when a tree node is collapsed"
}]

# ,{
#   name : "onLoadNextLevel",
#   description: "Event triggered when "
# }

#   name : "onNodeMoved",
#   description: "Event triggered when "
# },{
#   name : "onNodeCreated",
#   description: "Event triggered when "
# },{
#   name : "onNodeRemoved",
#   description: "Event triggered when "
# },{
#   name : "onNodeRenamed",
#   description: "Event triggered when "
# },{