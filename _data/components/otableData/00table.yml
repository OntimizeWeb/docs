class: "OTableComponent"

directive: "o-table"

inheritedAttributes: [{
  component: "OServiceComponent",
  path: "components/service/service",
  attributes: ["title", "visible", "enabled", "controls", "detail-mode", "detail-form-route", "recursive-detail", "detail-button-in-row", "detail-button-in-row-icon", "edit-form-route", "recursive-edit", "edit-button-in-row", "edit-button-in-row-icon", "insert-button", "row-height", "insert-form-route", "recursive-insert"]
}]


# css-class

attributes: [{
  name: "visible-columns",
  type: "string",
  default: "",
  required: "",
  description: "Visible columns. Separated by ';'"
},{
  name: "sort-columns",
  type: "string",
  default: "",
  required: "",
  description: "Initial ordering, using [ ASC or DESC ] format. Separated by ';'"
},{
  name: "quick-filter"
},{
  name: "filter-case-sensitive",
  type: "no | false | yes | true",
  default: "no",
  required: "",
  description: "Indicates whether or not to do a case sensitive quickfilter search"
},{
  name: "refresh-button"
},{
  name: "delete-button",
  type: "no | false | yes | true",
  default: "yes",
  required: "",
  description: "Indicates whether or not to show a button for deleting data"
},{
  name: "show-table-buttons-text",
  type: "no | false | yes | true",
  default: "yes",
  required: "",
  description: "Indicates whether or not to show table actions text alongside icons"
},{
  name: "select-all-checkbox",
  type: "no | false | yes | true",
  default: "no",
  required: "",
  description: "Indicates whether or not to show a option in the menu of the table that it have capacity show a column of checkboxes for selecting table rows"
},{
  name: "pagination-controls",
  type: "no | false | yes | true",
  default: "yes",
  required: "",
  description: "Indicates whether or not to show the pagination controls"
},{
  name: "fixed-header",
  type: "no | false | yes | true",
  default: "no",
  required: "",
  description: "Indicates whether or not to have a fixed header and footer when the content is greather than its own height"
},{
  name: "export-button",
  type: "no | false | yes | true",
  default: "yes",
  required: "",
  description: "Indicates whether or not to show a button on the header menu for exporting data"
},{
  name: "quick-filter-function",
  type: "(filter: string) => IFilterExpression | Object",
  default: "",
  required: "",
  description: "Function for passing a custom filter value to paginated service queries"
},{
  name: "columns-visibility-button",
  type: "no | false | yes | true",
  default: "yes",
  required: "",
  description: "Indicates whether or not to showa button on the header menu for changing columns visibility"
},{
  name: "show-title",
  type: "no | false | yes | true",
  default: "no",
  required: "",
  description: "Indicates whether or not to show the table title in the toolbar"
},{
  name: "edition-mode",
  type: "none | click | dblclick",
  default: "none",
  required: "",
  description: "Action for changing a cell to edition mode"
},{
  name: "selection-mode",
  type: "none | simple | multiple",
  default: "multiple",
  required: "",
  description: "Row selection mode"
},{
  name: "query-with-null-parent-keys"
},{
  name: "horizontal-scroll",
  type: "no | false | yes | true",
  default: "no",
  description: "Indicates whether or not to allow horizontal scroll"
},{
  name: "show-paginator-first-last-buttons",
  type: "no | false | yes | true",
  default: "yes",
  description: "Indicates whether or not to show the go to the first and last page in the table pagination"
},{
  name: "auto-align-titles",
  type: "no | false | yes | true",
  default: "no",
  description: "Indicates whether or not to auto align the table header cells"
}]

outputs: [{
  name: "onClick",
  description: "Event triggered when a row is clicked"
},{
  name: "onDoubleClick",
  description: "Event triggered when a row is double clicked"
},{
  name: "onRowDeselected",
  description: "Event triggered when a row is deselected"
},{
  name: "onRowDeleted",
  description: "Event triggered when there some row deletion"
},{
  name: "onDoubleClick",
  description: "Event triggered when a row is double clicked"
},{
  name: "onTableDataLoaded",
  description: "Event triggered when table data is updated"
},{
  name: "onPaginatedTableDataLoaded",
  description: "Event triggered when table paginated data is updated"
}]
