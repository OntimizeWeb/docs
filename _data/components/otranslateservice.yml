class: "OTranslateService"

propertiesColumns: ["Name", "Type", "Description"]

attributes: [{
  name: "static-data"
},{
  name: "entity"
},{
  name: "service"
},{
  name: "columns"
},{
  name: "value-column"
},{
  name: "value-column-type"
},{
  name: "parent-keys",
  type: "string",
  default: "",
  required: "",
  description: "Filtering keys. Separated by ';'. It is possible to use alias on the following way: compCol1:fk1;compCol2:fk2 where compCol1 and compCol2 are component columns and fk1 and fk2 are attributes from form fields.
  It is also possible to define a column next to the alias for getting that column value instead of the component value: compCol1:fk1[fkCol]"
},{
  name: "visible-columns",
  type: "string",
  default: "",
  required: "",
  description: "Visible columns. Separated by ';'"
},{
  name: "description-columns"
},{
  name: "separator"
},{
  name: "query-on-init"
},{
  name: "query-on-bind"
},{
  name: "query-on-event"
},{
  name: "query-method"
},{
  name: "service-type"
},{
  name: "query-with-null-parent-keys"
},{
  name: "set-value-on-value-change",
  type: "string",
  default: "",
  required: "",
  description: "Form component attributes whose value will be set when the value of the current component changes due to user interaction. Separated by ';'. Accepted format: `attr | attr:columnName`"
}]

outputs: [{
  name: "onLanguageChanged",
  description: "Event triggered when the lang change events"
}]

methods: [{
  name: "setDefaultLang()",
  type: "method",
  parameters: "lang: string",
  description: "Sets the default language to use as a fallback"
},{
  name: "get()",
  type: "method",
  parameters: "text: string, values: any[]",
  description:  "Gets the translated value of a key or the key if the value was not found"
},{
  name: "setAppLang()",
  type: "method",
  parameters: "lang: string",
  description:  ""
},{
  name: "use()",
  type: "method",
  parameters: "lang: string, observer?: Subscriber<any>",
  description:  ""
},{
  name: "getCurrentLang()",
  type: "method",
  description:  "Returns the lang  currently used."
},{
  name: "getBrowserLang()",
  type: "method",
  description:  "Returns the current browser lang if available."
}
]
