class: "OTranslateService"

propertiesColumns: ["Name", "Type", "Description"]



outputs: [{
  name: "onLanguageChanged",
  description: "Event triggered when the lang change events"
}]

methods: [{
  name: "setDefaultLang",
  type: "method",
  parameters: "lang: string",
  description: "Sets the default language to use as a fallback"
},{
  name: "get",
  type: "method",
  parameters: "text: string, values: any[]",
  description:  "Gets the translated value of a key or the key if the value was not found"
},{
  name: "setAppLang",
  type: "method",
  parameters: "lang: string",
  description:  ""
},{
  name: "use",
  type: "method",
  parameters: "lang: string, observer?: Subscriber<any>",
  description:  ""
},{
  name: "getCurrentLang",
  type: "method",
  description:  "Returns the lang  currently used."
},{
  name: "getBrowserLang",
  type: "method",
  description:  "Returns the current browser lang if available."
},{
  name: "storeLanguage",
  type: "method",
  parameters: "lang: string",
  description:  "Store language in localstorage"
},{
  name: "getStoredLanguage",
  type: "method",
  returns: "string",
  description:  "Get stored language in localstorage"
}
]
