directive: "o-combo"

inheritedAttributes: [{
  component: "FormDataComponent",
  path: "components/input/overview",
  attributes: ["attr", "label", "tooltip", "tooltip-position", "tooltip-show-delay", "data", "automatic-binding", "automatic-registering", "enabled", "required", "sql-type", "width", "read-only", "clear-button", "validators"]
# },{
#   component: "OFormServiceComponent",
#   path: "components/input/overviewservicecomponent",
#   attributes: ["static-data", "entity", "service", "columns", "value-column", "value-column-type", "parent-keys", "description-columns", "separator", "query-on-init", "query-on-bind", "query-on-event", "query-method", "service-type"]
}]

attributes: [{
  name: "static-data"
},{
  name: "entity"
},{
  name: "service"
},{
  name: "columns"
},{
  name: "value-column"
},{
  name: "value-column-type"
},{
  name: "parent-keys"
},{
  name: "description-columns"
},{
  name: "separator"
},{
  name: "query-on-init"
},{
  name: "query-on-bind"
},{
  name: "query-on-event"
},{
  name: "query-method"
},{
  name: "service-type"
},{
  name: "translate",
  type: "no | false | yes | true",
  default: "false",
  required: "",
  description: "Indicates whether or not to translate the values shown on the drop down"
},{
  name: "multiple",
  type: "no | false | yes | true",
  default: "false",
  required: "",
  description: "Indicates whether or not to allow the user to select multiple options"
},{
  name: "null-selection",
  type: "no | false | yes | true",
  default: "yes",
  required: "",
  description: "Indicates whether or not to have a selectable <em>null</em> value"
},{
  name: "multiple-trigger-label",
  type: "no | false | yes | true",
  default: "false",
  required: "",
  description: "Indicates whether or not the component label shows a summary of the selected items"
}]

outputs: [{
  name: "onChange",
  description: "Event triggered when component selected value changes"
}]

methods: [{
  name: "getSelectedItems()",
  type: "method",
  description: "Return the selected items of the component.",
  returns: "any[]"
},{
  name: "setSelectedItems()",
  type: "method",
  parameters: "any[]",
  description: "Set the selected items of the component."
}]
