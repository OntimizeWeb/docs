directive : "o-chart"

inheritedAttributes: [{
  component: "OServiceBaseComponent",
  path: "components/service/service-base/api",
  attributes: ["attr", "service", "service-type", "entity", "query-fallback-function", "query-on-init", "query-on-bind", "pageable", "columns", "keys", "parent-keys", "static-data", "query-method", "query-rows", "store-state", "query-with-null-parent-keys"]
}]

attributes: [{
  name: "chart-height",
  description: "Set the height of the chart in pixels.",
  type: "number"
},{
  name: "chart-width",
  description: "Set the width of the chart in pixels.",
  type: "number"
},{
  name: "type",
  description: "Defines the type of graph to be painted (bubbleChart, bulletChart, candlestickBarChart, discreteBar, donutChart, forceDirectedGraph, gaugeDashboardChart, gaugeSimpleChart, gaugeSlimChart, gaugeSpaceChart, line, linePlusBarWithFocusChart, multiBar, multiBarHorizontalChart, ohlcBarChart, parallelCoordinatesChart, pie, radarChart, radialPercentChart, scatterChart, stackedAreaChart)",
  type: "string"
},{
  name: "x-axis",
  description: "Defines the data to be displayed on X axis",
  type: "string"
},{
  name: "y-axis",
  description: "Defines the data to be displayed on Y axis",
  type: "string"
},{
  name: "x-label",
  description: "Label to be displayed on X axis",
  type: "string"
},{
  name: "y-label",
  description: "Label to be displayed on Y axis",
  type: "string"
},{
  name: "x-data-type",
  description: "Type of data displayed on X axis",
  type: "string"
},{
  name: "y-data-type",
  description: "Type of data displayed on Y axis",
  type: "string"
},{
  name: "data",
  description: "Defines the array of data to be displayed on the chart",
  type: "array"
},{
  name: "chart-parameters",
  description: "Control properties of styling, fonts, the legend, etc."
},
{
  name: "show-legend",
  description: "Controls whether the legend is displayed.",
  type: "boolean",
  default: false
},{
  name: "legend-position",
  description: "Allows modifying the position of the legend. Values can be 'right' or 'below'.",
  type: "string"
},{
  name: "legend-title",
  description: "Title to be displayed on the legend.",
  type: "string"
},
{
  name: "show-grid-lines",
  description: "Controls whether the grid lines are displayed on the chart.",
  type: "boolean",
  default: false
},
{
  name: "color",
  description: "Modifies the color palette of the chart. Accepts an object in the format { domain: ['#xxxx', '#xxxx', '#xxxx'] } or a theme name ('vivid', 'natural', 'cool', 'fire', 'solar', 'air', 'aqua', 'flame', 'ocean', 'forest', 'horizon', 'neons', 'picnic', 'night', 'nightLights')",
  type: "object|string"
}
]

outputs: [{
  name: "onSelect",
  description: "Click event triggered when an element in the chart is clicked."
},{
  name: "onActivate",
  description: "Element activation event triggered when the mouse enters an element in the chart."
},{
  name: "onDeactivate",
  description: "Element deactivation event triggered when the mouse leaves an element in the chart."
},{
  name: "onDataLoaded",
  description: "Event triggered when the data is loaded"
}]